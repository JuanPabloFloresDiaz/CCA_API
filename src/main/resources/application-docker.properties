# Archivo application-docker.properties para el entorno Docker

# Configuración específica para Docker
spring.application.name=${APPLICATION_NAME:Centro de Control de Acceso}

# Configuración de la base de datos para Docker
spring.datasource.url=${DATABASE_URL:jdbc:postgresql://postgres:5432/cca}
spring.datasource.username=${DATABASE_USERNAME:postgres}
spring.datasource.password=${DATABASE_PASSWORD:1234}
spring.datasource.driver-class-name=org.postgresql.Driver

# Configuración de JPA (Hibernate) para Docker
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=true

# Configuración de Flyway
spring.flyway.enabled=true
spring.flyway.locations=classpath:db/migration
spring.flyway.baseline-on-migrate=true

# Configuración de logging optimizada para Docker
logging.level.org.springframework.web=INFO
logging.level.org.springframework.http=INFO
logging.level.org.springframework.security=INFO
logging.level.org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter=INFO
logging.level.com.server.api=INFO

# Configuración JWT
app.jwt.secret=${TOKEN_SECRET}
app.jwt.expiration=${TOKEN_EXPIRATION_TIME:86400000}
app.jwt.algorithm=${TOKEN_ALGORITHM:HmacSHA512}
app.jwt.iterations=${TOKEN_ITERATIONS:100000}
app.jwt.key-length=${TOKEN_KEY_LENGTH:512}
app.jwt.salt=${TOKEN_SALT}

# Configuración de CORS
app.cors.allowed-origins=${CORS_ALLOWED_ORIGINS:http://localhost:4200}

# Llave identificadora de la aplicación
app.application.identifier=${APPLICATION_KEY:CCA_AUTH_SERVICE}

# Configuración de Actuator para healthcheck
management.endpoints.web.exposure.include=health,info
management.endpoint.health.show-details=when-authorized
