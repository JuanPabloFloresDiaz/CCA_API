services:
  # Base de datos PostgreSQL
  postgres:
    image: 'postgres:15-alpine'
    container_name: cca-postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "${DB_EXTERNAL_PORT}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./src/main/resources/db/migration:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - cca-network

  # Aplicación Spring Boot
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: cca-api
    environment:
      # Configuración de la aplicación
      APPLICATION_NAME: ${APPLICATION_NAME}
      APPLICATION_PORT: ${APPLICATION_PORT}
      APPLICATION_ENV: ${APPLICATION_ENV}
      
      # Configuración de la base de datos
      DATABASE_URL: ${DATABASE_URL}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      
      # Configuración JWT
      TOKEN_SECRET: ${TOKEN_SECRET}
      TOKEN_EXPIRATION_TIME: ${TOKEN_EXPIRATION_TIME}
      TOKEN_ALGORITHM: ${TOKEN_ALGORITHM}
      TOKEN_ITERATIONS: ${TOKEN_ITERATIONS}
      TOKEN_KEY_LENGTH: ${TOKEN_KEY_LENGTH}
      TOKEN_SALT: ${TOKEN_SALT}
      
      # Configuración CORS
      CORS_ALLOWED_ORIGINS: ${CORS_ALLOWED_ORIGINS}
      
      # Llave de aplicación
      APPLICATION_KEY: ${APPLICATION_KEY}
      
      # Configuración JVM
      JAVA_OPTS: "-Xmx512m -Xms256m -Dspring.profiles.active=docker"
    ports:
      - "${API_EXTERNAL_PORT}:8080"
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - cca-network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local

networks:
  cca-network:
    driver: bridge
